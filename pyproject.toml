[project]
name = "randogroup"
version = "0.1.0"
description = "A tool to randomize groups for group work in an educational setting"
readme = "README.md"
authors = [{ name = "Lukas Liebermann", email = "lk_tech@mailbox.org" }]
requires-python = ">=3.13"
dependencies = ["textual>=0.64.1", "platformdirs>=4.2.2"]


[project.scripts]
randogroup = "randogroup.app:randogrouper"

[build-system]
requires = ["uv_build>=0.8.13,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
  "commitizen>=4.8.4",
  "pytest>=8.4.1",
  "pytest-asyncio>=0.23.7",
  "textual-dev>=1.7.0",
]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true

[tool.ruff.lint]
select = [
  # Core correctness / style
  "F",
  "E",
  "W",
  "I",
  "N",

  "UP",  # pyupgrade – rewrite to modern Python syntax (f-strings, walrus, etc.)
  "C4",  # flake8-comprehensions – point out sub-optimal list/dict/set comps
  "SIM", # flake8-simplify – suggest clearer, shorter boolean / loop logic
  "RET", # flake8-return – keep return statements consistent and meaningful
  "ARG", # flake8-unused-arguments – flag unused, shadowed or *args/**kwargs
  "TID", # flake8-tidy-imports – ban unused or overly-relative imports
  "RUF", # Ruff-native extras – small bug-catchers & style nits not in other sets "UP",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
